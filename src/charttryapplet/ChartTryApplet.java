package charttryapplet;


import java.applet.Applet;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileFilter;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Bobasek
 */
public class ChartTryApplet extends javax.swing.JFrame {
    
    
   // public Applet client = null;
    private MenuItemHandler h_menuItem;
    public Applet client = null;
    RandomStockFileGenerator generator = new RandomStockFileGenerator();
   // private ChartTryApplet frame = null;


    /**
     * Creates new form ChartTryApplet
     */
    public ChartTryApplet(String title)
    {
        super(title);
        initComponents();
        h_menuItem = new MenuItemHandler(this);
        if (generator.getPathToFile() != null)
        {
           String mainFileName = RandomStockFileGenerator.getFileNameWithoutExtension(generator.getPathToFile());
           this.generator.generateFile("./data/"+mainFileName +".txt");
           Applet applet = this.loadClient();
           this.mainPanel.add(applet,BorderLayout.CENTER);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        northPanel = new javax.swing.JPanel();
        bt_randomize = new javax.swing.JButton();
        bt_nextSession = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        mainPanel.setLayout(new java.awt.BorderLayout());
        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        leftPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        leftPanel.setToolTipText("");

        jLabel1.setText("ROI");

        jLabel2.setMaximumSize(new java.awt.Dimension(15, 14));
        jLabel2.setMinimumSize(new java.awt.Dimension(15, 14));
        jLabel2.setPreferredSize(new java.awt.Dimension(15, 14));

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                .addGap(410, 410, 410))
        );

        getContentPane().add(leftPanel, java.awt.BorderLayout.LINE_START);

        northPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        northPanel.setMinimumSize(new java.awt.Dimension(823, 80));
        northPanel.setPreferredSize(new java.awt.Dimension(823, 80));

        bt_randomize.setText("Randomize");
        bt_randomize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_randomizeActionPerformed(evt);
            }
        });

        bt_nextSession.setText("Next session");
        bt_nextSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_nextSessionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout northPanelLayout = new javax.swing.GroupLayout(northPanel);
        northPanel.setLayout(northPanelLayout);
        northPanelLayout.setHorizontalGroup(
            northPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(northPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(bt_randomize)
                .addGap(55, 55, 55)
                .addComponent(bt_nextSession)
                .addContainerGap(629, Short.MAX_VALUE))
        );
        northPanelLayout.setVerticalGroup(
            northPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(northPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(northPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_randomize)
                    .addComponent(bt_nextSession))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        getContentPane().add(northPanel, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("File");

        newMenuItem.setText("New");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(newMenuItem);

        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuItem);
        jMenu1.add(jSeparator1);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        h_menuItem.handleExit();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
         h_menuItem.handleNew();
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        JFileChooser fileChoose = new JFileChooser();
        FileNameExtensionFilter filter1 = new FileNameExtensionFilter("Metastock (*.mst)", new String[] { "mst" });
         
        fileChoose.setFileFilter(filter1);
        fileChoose.removeChoosableFileFilter(fileChoose.getAcceptAllFileFilter());

       if ( JFileChooser.APPROVE_OPTION == fileChoose.showOpenDialog(this) )
       {
           File file = fileChoose.getSelectedFile();
           String pathTofile = file.getAbsolutePath();
           String mainFileName = RandomStockFileGenerator.getFileNameWithoutExtension(pathTofile);
           this.generator.generateFile(pathTofile, "./data/"+mainFileName +".txt");
           if (this.client != null)
              this.mainPanel.remove(this.client); 
           Applet applet = this.loadClient();
           this.mainPanel.add( applet,BorderLayout.SOUTH);
           this.revalidate();
           this.repaint();
       }
       // h_menuItem.handleOpen();
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void bt_randomizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_randomizeActionPerformed
         if (generator.getPathToFile() != null) {
            String mainFileName = RandomStockFileGenerator.getFileNameWithoutExtension(generator.getPathToFile());
            this.generator.generateFile("./data/"+mainFileName +".txt");
            this.mainPanel.remove(this.client);
            Applet applet = this.loadClient();
            this.mainPanel.add(applet, BorderLayout.SOUTH);
            this.revalidate();
            this.repaint();
        }
    }//GEN-LAST:event_bt_randomizeActionPerformed

    private void bt_nextSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_nextSessionActionPerformed
            this.generator.addOneSession("./data/"+RandomStockFileGenerator.getFileNameWithoutExtension(generator.getPathToFile())+".txt");
             this.mainPanel.remove(this.client); 
             Applet applet = this.loadClient();
             this.mainPanel.add( applet,BorderLayout.SOUTH);
             this.revalidate();
             this.repaint();
    }//GEN-LAST:event_bt_nextSessionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChartTryApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChartTryApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChartTryApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChartTryApplet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                ChartTryApplet frame = new ChartTryApplet("Technical Analysis Coach");
                frame.setVisible(true);
            }
        });
    }
    
     public Applet loadClient() {
       
                  try {
                           URLClassLoader jc = null;
                           File f = new File("fncharts.jar");
                           jc = new URLClassLoader(new URL[]{f.toURL()});
                           client = (Applet) jc.loadClass("FnChartsApplet").newInstance();
                           
                           FnChartsAppletStub stub = new FnChartsAppletStub(client);
                           stub.setSymbol(RandomStockFileGenerator.getFileNameWithoutExtension(generator.getPathToFile()));
                           client.setStub(stub);
                           client.setPreferredSize(new Dimension(700,700));
                           client.init();
                           

                           client.start();
                           
                           
                  } catch (InstantiationException ex) {
                           //Logger.getLogger(Loader.class.getName()).log(Level.SEVERE, null, ex);
                  } catch (IllegalAccessException ex) {
                          // Logger.getLogger(Loader.class.getName()).log(Level.SEVERE, null, ex);
                  } catch (ClassNotFoundException ex) {
                          // Logger.getLogger(Loader.class.getName()).log(Level.SEVERE, null, ex);
                  } catch (MalformedURLException ex) {
                          // Logger.getLogger(Loader.class.getName()).log(Level.SEVERE, null, ex);
                  }
                  return client;
         }
    
     
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_nextSession;
    public javax.swing.JButton bt_randomize;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    public javax.swing.JPanel leftPanel;
    public javax.swing.JPanel mainPanel;
    private javax.swing.JMenuItem newMenuItem;
    public javax.swing.JPanel northPanel;
    private javax.swing.JMenuItem openMenuItem;
    // End of variables declaration//GEN-END:variables
}



/*class ButtonActionListener implements ActionListener
{
    private ChartTryApplet _applet = null;

    public ButtonActionListener(ChartTryApplet applet) 
    {
        this._applet = applet;
    }

    @Override
    public void actionPerformed(ActionEvent e) 
    {
        String action = e.getActionCommand();
        if ("Randomize".equalsIgnoreCase(action)) 
        {
            _applet.generator.generateFile("./KGHM.mst", "./data/KGHM.txt");
            _applet.mainPanel.remove(_applet.client); 
             Applet applet = _applet.loadClient();
            _applet.mainPanel.add( applet,BorderLayout.SOUTH);
            _applet.revalidate();
            _applet.repaint();
            
        }
        else if ("Next Session".equalsIgnoreCase(action))
        {
             _applet.generator.addOneSession("./KGHM.mst", "./data/KGHM.txt");
             //_applet.mainPanel.remove(_applet.client); 
             //Applet applet = _applet.loadClient();
            //_applet.mainPanel.add( applet,BorderLayout.SOUTH);
            _applet.client.stop();
            _applet.client.init();
            _applet.client.start();
            _applet.client.revalidate();
            
            _applet.revalidate();
            _applet.repaint();
        }
    }
}*/
